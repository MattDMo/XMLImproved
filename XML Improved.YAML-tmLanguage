# [PackageDev] target_format: plist, ext: tmLanguage
name: XML Improved
scopeName: text.xml
fileTypes: [xml, tld, jsp, pt, cpt, dtml, rss, opml, plist, tmLanguage, tmTheme, tmPreferences, sublime-snippet]
uuid: E9A7DC84-D019-4D15-BF5F-E0F7B1A4C391

patterns:
- name: meta.tag.preprocessor.xml
  begin: (<\?)\s*([-_\p{Alnum}]+)
  end: (\?>)
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.xml}
    '2': {name: entity.name.tag.xml}
  endCaptures:
    '1': {name: punctuation.definition.tag.end.xml}
  patterns:
  - name: entity.other.attribute-name.xml
    match: ' ([a-zA-Z-]+)'
  - include: '#doublequotedString'
  - include: '#singlequotedString'

- name: meta.tag.sgml.doctype.xml
  begin: (<!)(DOCTYPE)\s+([:\p{Alpha}_][:\p{Alnum}_.-]*)
  end: \s*(>)
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.xml}
    '2': {name: keyword.doctype.xml}
    '3': {name: variable.documentroot.xml}
  endCaptures:
    '1': {name: punctuation.definition.tag.end.xml}
  patterns:
  - include: '#internalSubset'

- name: comment.block.xml
  begin: <[!%]--
  end: --%?>
  captures:
    '0': {name: punctuation.definition.comment.xml}

- name: meta.tag.no-content.xml
  begin: (<)((?:([-_\p{Alnum}]+)((:)))?([-_\p{Alnum}:]+))(?=(\s[^>]*)?></\2>)
  beginCaptures:
    '1': {name: punctuation.definition.tag.begin.xml}
    '3': {name: entity.name.tag.namespace.xml}
    '4': {name: entity.name.tag.xml}
    '5': {name: punctuation.separator.namespace.xml}
    '6': {name: entity.name.tag.localname.xml}
  end: (>)(<)(/)(?:([-_\p{Alnum}]+)((:)))?([-_\p{Alnum}:]+)(>)
  endCaptures:
    '1': {name: punctuation.definition.tag.end.xml}
    '2': {name: punctuation.definition.tag.begin.xml meta.scope.between-tag-pair.xml}
    '3': {name: punctuation.definition.tag.begin.xml}
    '4': {name: entity.name.tag.namespace.xml}
    '5': {name: entity.name.tag.xml}
    '6': {name: punctuation.separator.namespace.xml}
    '7': {name: entity.name.tag.localname.xml}
    '8': {name: punctuation.definition.tag.end.xml}
  patterns:
  - include: '#tagStuff'

- name: meta.tag.xml
  begin: (</?)(?:([-_\p{Alnum}]+)((:)))?([-_\p{Alnum}:]+)
  end: (/?>)
  endCaptures:
    '1': {name: punctuation.definition.tag.end.xml}
  captures:
    '1': {name: punctuation.definition.tag.begin.xml}
    '2': {name: entity.name.tag.namespace.xml}
    '3': {name: entity.name.tag.xml}
    '4': {name: punctuation.separator.namespace.xml}
    '5': {name: entity.name.tag.localname.xml}
  patterns:
  - include: '#tagStuff'

- include: '#entity'

- include: '#bare-ampersand'

- name: source.java-props.embedded.xml
  begin: <%@
  beginCaptures:
    '0': {name: punctuation.section.embedded.begin.xml}
  end: '%>'
  endCaptures:
    '0': {name: punctuation.section.embedded.end.xml}
  patterns:
  - name: keyword.other.page-props.xml
    match: page|include|taglib

- name: source.java.embedded.xml
  begin: <%[!=]?(?!--)
  beginCaptures:
    '0': {name: punctuation.section.embedded.begin.xml}
  end: (?!--)%>
  endCaptures:
    '0': {name: punctuation.section.embedded.end.xml}
  patterns:
  - include: source.java

- name: string.unquoted.cdata.xml
  begin: <!\[CDATA\[
  beginCaptures:
    '0': {name: punctuation.definition.string.begin.xml}
  end: ']]>'
  endCaptures:
    '0': {name: punctuation.definition.string.end.xml}

repository:
  EntityDecl:
    begin: (<!)(ENTITY)\s+(%\s+)?([:\p{Alpha}_][:\p{Alnum}_.-]*)(\s+(?:SYSTEM|PUBLIC)\s+)?
    end: (>)
    captures:
      '1': {name: punctuation.definition.tag.begin.xml}
      '2': {name: keyword.entity.xml}
      '3': {name: punctuation.definition.entity.xml}
      '4': {name: variable.entity.xml}
      '5': {name: keyword.entitytype.xml}
    patterns:
    - include: '#doublequotedString'
    - include: '#singlequotedString'

  bare-ampersand:
    name: invalid.illegal.bad-ampersand.xml
    match: '&'

  doublequotedString:
    name: string.quoted.double.xml
    begin: '"'
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.xml}
    end: '"'
    endCaptures:
      '0': {name: punctuation.definition.string.end.xml}
    patterns:
    - include: '#entity'
    - include: '#bare-ampersand'

  entity:
    name: constant.character.entity.xml
    match: (&)([:\p{Alpha}_][:\p{Alnum}_.-]*|#[0-9]+|#x\h+)(;)
    captures:
      '1': {name: punctuation.definition.constant.xml}
      '3': {name: punctuation.definition.constant.xml}

  internalSubset:
    name: meta.internalsubset.xml
    begin: (\[)
    end: (\])
    captures:
      '1': {name: punctuation.definition.constant.xml}
    patterns:
    - include: '#EntityDecl'
    - include: '#parameterEntity'

  parameterEntity:
    name: constant.character.parameter-entity.xml
    match: (%)([:\p{Alpha}_][:\p{Alnum}_.-]*)(;)
    captures:
      '1': {name: punctuation.definition.constant.xml}
      '3': {name: punctuation.definition.constant.xml}

  singlequotedString:
    name: string.quoted.single.xml
    begin: ''''
    beginCaptures:
      '0': {name: punctuation.definition.string.begin.xml}
    end: ''''
    endCaptures:
      '0': {name: punctuation.definition.string.end.xml}
    patterns:
    - include: '#entity'
    - include: '#bare-ampersand'

  tagStuff:
    patterns:
    - match: ' (?:([-_\p{Alnum}]+)((:)))?([-_\p{Alnum}]+)='
      captures:
        '1': {name: entity.other.attribute-name.namespace.xml}
        '2': {name: entity.other.attribute-name.xml}
        '3': {name: punctuation.separator.namespace.xml}
        '4': {name: entity.other.attribute-name.localname.xml}
    - include: '#doublequotedString'
    - include: '#singlequotedString'
firstLineMatch: '^<\?xml '
foldingStartMarker: ^\s*(<[^!?%/](?!.+?(/>|</.+?>))|<[!%]--(?!.+?--%?>)|<%[!]?(?!.+?%>))
foldingStopMarker: ^\s*(</[^>]+>|[/%]>|-->)\s*$
keyEquivalent: ^~X
